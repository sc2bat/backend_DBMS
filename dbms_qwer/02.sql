-- VIEW

CREATE SEQUENCE member_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE testfor_seq START WITH 1 INCREMENT BY 1;

INSERT INTO TESTFOR1(num1, name1, age1) VALUES(testfor_seq.nextVal, '노지선', 23);

INSERT INTO TESTFOR1(num1, name1, age1) VALUES(testfor_seq.nextVal, '이새롬', 24);

INSERT INTO TESTFOR1(num1, name1, age1) VALUES(testfor_seq.nextVal, '송하영', 24);

SELECT * FROM TESTFOR1;

SELECT testfor_seq.CURRVAL, testfor_seq.nextVal FROM DUAL;

ALTER SEQUENCE testfor_seq MAXVALUE 11500;

CREATE SEQUENCE testseq START WITH 3 INCREMENT BY 2;
DROP SEQUENCE testseq;


SELECT * FROM TESTFOR1;

SELECT * FROM TESTFOR1 WHERE name1 LIKE '%지%';

SELECT * FROM TESTFOR1 WHERE age1 >= 20;

SELECT * FROM TESTFOR1 WHERE gender1='F' OR name1 LIKE '%롬%';
SELECT * FROM TESTFOR1 WHERE age1 < 24 OR name1 LIKE '%롬%';

SELECT * FROM TAB;
SELECT * FROM TABS;


--DESC dept;

SELECT name1, age1 FROM TESTFOR1 WHERE gender1 IS NOT NULL;

SELECT * FROM EMP WHERE deptno=ALL(10, 20, 40);

SELECT * FROM EMP WHERE deptno <> 20 AND deptno <>40;

SELECT * FROM TESTFOR1 WHERE name1 NOT IN('프로미스%');
SELECT * FROM TESTFOR1 WHERE name1 NOT IN('프로미스나인이서연');

SELECT * FROM TESTFOR1 WHERE birth1 IS NOT NULL;
SELECT * FROM TESTFOR2 WHERE birth2 IS NULL;

SELECT * FROM TESTFOR2;


SELECT 1234 + 1234 FROM DUAL;

SELECT UPPER(name1), LOWER(position1), INITCAP(position1) FROM TESTFOR1;

SELECT UPPER('qwer'), LOWER('QWER'), INITCAP('aser') FROM DUAL;


SELECT CONCAT('프로','미스','나인') FROM DUAL;
SELECT CONCAT('프로','미스') FROM DUAL;
SELECT '프로'||'미스나인' FROM DUAL;

SELECT LENGTH('가나다') FROM DUAL;
SELECT LENGTH('3IDKFIEKFJEJFI') FROM DUAL;
SELECT LENGTH('3 IDKF IE K FJEJFI') FROM DUAL;

SELECT * FROM TESTFOR1 WHERE LENGTH(name1) >3 AND position1 LIKE 'vo%';

SELECT SUBSTR(name1, 4, 6) FROM TESTFOR1;
SELECT SUBSTR(name1, 4, 1) FROM TESTFOR1;
SELECT SUBSTR(name1, 4) FROM TESTFOR1;

SELECT INSTR('가나다라마바사아자차카타파하', '파') FROM DUAL;

SELECT LPAD('TEST', 15, '@') FROM DUAL;
SELECT RPAD('TEST', 20, '%') FROM DUAL;

SELECT TRIM('A' FROM 'AAAAAAAAAAAATESTAAFORAA') AS result FROM DUAL;

SELECT ROUND(12.23456, 3) FROM DUAL;
SELECT ROUND(12.23456, 1) FROM DUAL;
SELECT ROUND(12.23456) FROM DUAL;

SELECT ABS(-23) FROM DUAL;
SELECT ABS(-23.234) FROM DUAL;
SELECT ROUND(ABS(-23.234)) FROM DUAL;
SELECT ROUND(ABS(-23.234), -1) FROM DUAL;

SELECT FLOOR(12.09875) FROM DUAL;

SELECT CEIL(12.34515) FROM DUAL;

SELECT TRUNC(12.34567, 3) FROM DUAL;
SELECT TRUNC(12.34567, 1) FROM DUAL;
SELECT TRUNC(12.39867, 2) FROM DUAL;

SELECT MOD(50, 3) FROM DUAL;


SELECT SYSDATE FROM DUAL;


SELECT FLOOR(MONTHS_BETWEEN('2021-12-31', '2020-08-23')) FROM DUAL;
SELECT CEIL(MONTHS_BETWEEN('2021-12-31', '2020-08-23')) FROM DUAL;
SELECT TRUNC(MONTHS_BETWEEN('2021-12-31', '2020-08-23'), 4) FROM DUAL;
SELECT TRUNC(MONTHS_BETWEEN('2021-12-31', '2020-08-23'), 6) FROM DUAL;

SELECT MONTHS_BETWEEN('2021-12-31', '2020-08-23') FROM DUAL;

SELECT ADD_MONTHS(SYSDATE, 300) FROM DUAL;

SELECT NEXT_DAY(SYSDATE, '월요일') FROM DUAL;
SELECT NEXT_DAY(SYSDATE, '화요일') FROM DUAL;

SELECT LAST_DAY(SYSDATE) FROM DUAL;

SELECT LAST_DAY(ADD_MONTHS(SYSDATE, 4)) FROM DUAL;

SELECT NEXT_DAY(LAST_DAY(ADD_MONTHS(SYSDATE, 4)), '목요일') FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YY-MM-DD') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YY/MM/DD') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YY"년"MM"월"DD"일"') FROM DUAL;

--INSERT INTO TESTFOR1(birth1) VALUES(TO_CHAR(SYSDATE, 'YY-MM-DD'));
SELECT * FROM TESTFOR1;
UPDATE TESTFOR1 SET birth1=TO_CHAR(SYSDATE, 'YY-MM-DD') WHERE num1='1';
UPDATE TESTFOR1 SET birth1=SYSDATE WHERE num1='1';
UPDATE TESTFOR1 SET birth1=NUMBER(SYSDATE) WHERE num1='1';


UPDATE TESTFOR1 SET position1=SYSDATE WHERE num1='1';

ALTER TABLE TESTFOR1 MODIFY birth1 VARCHAR2(50);

SELECT SUM(grade1) AS "대여가격 합계"	FROM TESTFOR1;

SELECT COUNT(*) AS "카운트" FROM TESTFOR1;

SELECT COUNT(*) AS "카운트 조건" FROM TESTFOR1 WHERE age1 >= 23;

SELECT FLOOR(AVG(grade1)) AS "평균" FROM TESTFOR1 WHERE age1 >= 23;

--D:\study_java\workspace\Oracle_DataBase\src 경로 내 파일 임포트
--imp scott/tiger file=expall.dmp log=expall.log ignore=y grants=y rows=y indexes=y full=y

SELECT * FROM EMPLOYEES;

SELECT VARIANCE(salary), STDDEV(salary) FROM EMPLOYEES;
SELECT FLOOR(VARIANCE(salary)), ROUND(STDDEV(salary), 4) FROM EMPLOYEES;

SELECT * FROM KOR_LOAN_STATUS;

SELECT period, SUM(loan_jan_amt) FROM KOR_LOAN_STATUS GROUP BY period ORDER BY period;

SELECT emp_name AS 이름, salary AS 급여 FROM EMPLOYEES GROUP BY manager_id HAVING 3000 > AVG(salary);
SELECT emp_name AS 이름, salary AS 급여 FROM EMPLOYEES GROUP BY manager_id HAVING salary > 3000;

SELECT emp_name AS 이름, AVG(salary) AS 급여 FROM EMPLOYEES GROUP BY manager_id HAVING salary > 3000;



SELECT emp_name AS 이름, salary AS 급여 FROM EMPLOYEES GROUP BY emp_name HAVING AVG(salary) > 3000;

-- 11 join

SELECT * FROM EMPLOYEES;
















